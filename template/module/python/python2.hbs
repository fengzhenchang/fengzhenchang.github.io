<div class="u-col">
    <div class="u-block">
        <h3>字符串<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] 格式化</h4>
            <ul>
                <li>
                    {plh}<a href="">.format</a>(val)
                    <span>
                        格式化
                    </span>
                </li>
                <li>
                    <a href="">%s</a> % (val)
                    <span>
                        格式字符串
                        <a href="http://www.runoob.com/python3/python3-string.html">参考资料</a> <br>
                        <table>
                            <tbody>
                                <tr>
                                    <th>符 号</th>
                                    <th>描述</th>
                                </tr>
                                <tr>
                                    <td> %c</td>
                                    <td>格式化字符及其ASCII码</td>
                                </tr>
                                <tr>
                                    <td> %s</td>
                                    <td>格式化字符串</td>
                                </tr>
                                <tr>
                                    <td> %d</td>
                                    <td>格式化整数</td>
                                </tr>
                                <tr>
                                    <td> %u</td>
                                    <td>格式化无符号整型</td>
                                </tr>
                                <tr>
                                    <td> %o</td>
                                    <td>格式化无符号八进制数</td>
                                </tr>
                                <tr>
                                    <td> %x</td>
                                    <td>格式化无符号十六进制数</td>
                                </tr>
                                <tr>
                                    <td> %X</td>
                                    <td>格式化无符号十六进制数（大写）</td>
                                </tr>
                                <tr>
                                    <td> %f</td>
                                    <td>格式化浮点数字，可指定小数点后的精度</td>
                                </tr>
                                <tr>
                                    <td> %e</td>
                                    <td>用科学计数法格式化浮点数</td>
                                </tr>
                                <tr>
                                    <td> %E</td>
                                    <td>作用同%e，用科学计数法格式化浮点数</td>
                                </tr>
                                <tr>
                                    <td> %g</td>
                                    <td>%f和%e的简写</td>
                                </tr>
                                <tr>
                                    <td> %G</td>
                                    <td>%f 和 %E 的简写</td>
                                </tr>
                                <tr>
                                    <td> %p</td>
                                    <td>用十六进制数格式化变量的地址</td>
                                </tr>
                            </tbody>
                        </table>
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 编码</h4>
            <ul>
                <li>
                    <a href="">chr</a>(n)
                    <span>
                        把Unicode编码转换为对应的字符
                    </span>
                </li>
                <li>
                    <a href="">ord</a>(val)
                    <span>
                        获取字符的Unicode编码数字
                        <hr>
                        ord(s) -> Unicode编码数字 <br>
                        hex(ord(s)) -> 十六进制 <br>
                        '\u' + hex(ord(s)) Unicode表示法 <br>
                        <a
                            href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431664106267f12e9bef7ee14cf6a8776a479bdec9b9000">参考资料</a>
                    </span>
                </li>
                <li>
                    str<a href="">.encode</a>(encoding='UTF-8')
                    <span>
                        以指定的编码格式编码字符串 <br>
                        该方法返回编码后的字符串，它是一个 bytes 对象。
                    </span>
                </li>
                <li>
                    $bytes<a href="">.decode</a>(encoding="UTF-8")
                    <span>
                        以指定的编码格式解码 bytes 对象。默认编码为 'utf-8'。
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 检测</h4>
            <ul>
                <li>
                    str<a href="">.isalnum()</a>
                    <span>
                        检测字符串是否由字母和数字组成 <br>
                        返回值：True | False
                    </span>
                </li>
                <li>
                    str<a href="">.isalpha()</a>
                    <span>
                        检测字符串是否只由字母组成 <br>
                        返回值：True | False
                    </span>
                </li>
                <li>
                    str<a href="">.isdigit()</a>
                    <span>
                        检测字符串是否只由数字组成 <br>
                        返回值：True | False
                    </span>
                </li>
                <li>
                    str<a href="">.isnumeric()</a>
                    <span>
                        检测字符串是否只由数字组成。这种方法是只针对unicode对象 <br>
                        返回值：True | False
                    </span>
                </li>
                <li>
                    str<a href="">.isdecimal()</a>
                    <span>
                        检查字符串是否只包含十进制字符。这种方法只存在于unicode对象 <br>
                        返回值：True | False
                    </span>
                </li>
                <li>
                    str<a href="">.islower()</a>
                    <span>
                        检测字符串是否由小写字母组成 <br>
                        返回值：True | False
                    </span>
                </li>
                <li>
                    str<a href="">.issupper()</a>
                    <span>
                        检测字符串中所有的字母是否都为大写 <br>
                        返回值：True | False
                    </span>
                </li>
                <li>
                    str<a href="">.istitle()</a>
                    <span>
                        检测字符串中所有的单词拼写首字母是否为大写，且其他字母为小写 <br>
                        返回值：True | False
                    </span>
                </li>
                <li>
                    str<a href="">.isspace()</a>
                    <span>
                        检测字符串是否只由空白字符组成 <br>
                        返回值：True | False
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 转换</h4>
            <ul>
                <li>
                    str<a href="">.lower()</a>
                    <span>
                        转换字符串中所有大写字符为小写 <br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.upper()</a>
                    <span>
                        转换字符串中的小写字母为大写<br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.title()</a>
                    <span>
                        单词都是以大写开始，其余字母均为小写<br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.capitalize()</a>
                    <span>
                        将字符串的第一个字符转换为大写<br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.swapcase()</a>
                    <span>
                        将字符串中大写转换为小写，小写转换为大写<br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 查找</h4>
            <ul>
                <li>
                    str<a href="">.count</a>(sub,[start,end])
                    <span>
                        统计字符串里某个字符出现的次数 <br>
                        sub -- 搜索的子字符串 <br>
                        start -- 字符串开始搜索的位置。默认为第一个字符,第一个字符索引值为0。 <br>
                        end -- 字符串中结束搜索的位置。字符中第一个字符的索引为 0。默认为字符串的最后一个位置。
                    </span>
                </li>
                <li>
                    str<a href="">.find</a>(sub,[start,end])
                    <span>
                        检测字符串中是否包含子字符串 <br>
                        返回值：索引 | -1
                    </span>
                </li>
                <li>
                    str<a href="">.rfind</a>(sub,[start,end])
                    <span>
                        类似于 find()函数，不过是从右边开始查找 <br>
                        返回值：索引 | -1
                    </span>
                </li>
                <li>
                    str<a href="">.startswith</a>(sub,[start,end])
                    <span>
                        判断字符串是否以指定字符开始 <br>
                        返回值：True | False
                    </span>
                </li>
                <li>
                    str<a href="">.endswith</a>(sub,[start,end])
                    <span>
                        判断字符串是否以指定后缀结尾 <br>
                        返回值：True | False
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 连接分割</h4>
            <ul>
                <li>
                    syb<a href="">.join</a>(seq)
                    <span>
                        将seq中的元素以指定的syb连接生成一个新的字符串 <br>
                        '-'.join('aaa') <br>
                        返回值：新的字符串
                    </span>
                </li>
                <li>
                    str<a href="">.split</a>([syb,n])
                    <span>
                        指定分隔符对字符串进行切片 <br>
                        默认syb为所有的空字符，包括空格、换行(\n)、制表符(\t)等 <br>
                        n默认为-1，即分割所有；如果n有指定值，则仅分割n次 <br>
                        返回值：分割后的字符串列表
                    </span>
                </li>
                <li>
                    str<a href="">.splitlines</a>([True/False])
                    <span>
                        按照行('\r', '\r\n', \n')分隔，返回一个包含各行作为元素的列表 <br>
                        如为True则保留换行符，默认为 False。<br>
                        返回值：分割后的字符串列表
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 填充/替换</h4>
            <ul>
                <li>
                    str.<a href="">replace</a>(old,new,[n])
                    <span>
                        把 将字符串中的 str1 替换成 str2,如果 n 指定，则替换不超过 n 次 <br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.strip</a>([sub])
                    <span>
                        移除字符串头尾指定的字符（默认为空格）或字符序列 <br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.lstrip</a>([sub])
                    <span>
                        截掉字符串左边的空格或指定字符(多个)，默认值为空格<br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.rstrip</a>([sub])
                    <span>
                        删除字符串末尾的指定字符（默认为空格）<br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.center</a>(len,[fills])
                    <span>
                        居中方式填充一个字符串至指定长度<br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.ljust</a>(len,[fills])
                    <span>
                        左固定方式在右边填充一个字符串至指定长度<br>
                        fills只能为一个字符；默认为空格；如果默认字符大于len则直接返回原字符串 <br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.rjust</a>(len,[fills])
                    <span>
                        右固定方式在左边填充一个字符串至指定长度<br>
                        fills只能为一个字符；默认为空格；如果默认字符大于len则直接返回原字符串 <br>
                        返回值：新的字符串（原字符串不变）
                    </span>
                </li>
                <li>
                    str<a href="">.expandtabs</a>([n])
                    <span>
                        把字符串中的 tab 符号('\t')转为空格，默认值为8
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 映射</h4>
            <ul>
                <li>
                    str<a href="">.maketrans</a>(intab,outtab)
                    <span>
                        创建字符映射的转换表 <br>
                        两个字符串的长度必须相同，为一一对应的关系 <br>
                        返回一个翻译表 <br>
                        <a href="http://www.runoob.com/python3/python3-string-maketrans.html">参考资料</a>
                    </span>
                </li>
                <li>
                    str<a href="">.translate</a>(tab)
                    <span>
                        根据参数table给出的表(包含 256 个字符)转换字符串的字符
                        <hr>
                        intab = 'abc' <br>
                        outtab = '123' <br>
                        str = 'haha' <br>
                        t = str.maketrans(intab,outtab) <br>
                        s = str.translate(t)
                    </span>
                </li>
            </ul>
        </div>
    </div>
    <div class="u-block">
        <h3>编码/算法<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] json</h4>
            <ul>
                <li>
                    <a href="">json.dumps</a>(obj)
                    <span>
                        将 Python 对象编码成 JSON 字符串 <br>
                        <a href="https://docs.python.org/zh-cn/3/library/json.html#basic-usage">参考资料</a>
                    </span>
                </li>
                <li>
                    <a href="">json.loads</a>(json)
                    <span>
                        将已编码的 JSON 字符串解码为 Python 对象
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] base64</h4>
            <ul>
                <li>
                    base64<a href="">.b64encode</a>(bin)
                    <span>
                        import base64 <br>
                        将二进制数据编码为base64码
                    </span>
                </li>
                <li>
                    base64<a href="">.b64decode</a>(b64)
                    <span>
                        将base64码还原为二进制数据
                    </span>
                </li>
                <li>
                    base64<a href="">.urlsafe_b64encode</a>(bin)
                    <span>
                        把字符+和/分别变成-和_
                    </span>
                </li>
                <li>
                    base64<a href="">.urlsafe_b64decode</a>(b64)
                    <span>
                        解码base64编码的url
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] hashlib</h4>
            <ul>
                <li>
                    <a href="">import hashlib</a>
                    <span>
                        
                    </span>
                </li>
                <li>
                    hash=<a href="">hashlib.</a>hash()
                    <span>
                        md5 = hashlib.md5() <br>
                        MD5是最常见的摘要算法，速度很快，生成结果是固定的128 bit字节，通常用一个32位的16进制字符串表示。 <br>
                        sha1=hashlib.sha1() <br>
                        SHA1的结果是160 bit字节，通常用一个40位的16进制字符串表示。
                    </span>
                </li>
                <li>
                    hash<a href="">.update</a>(txt)
                    <span>
                        md5.update('how to use md5 in '.encode('utf-8')) <br>
                        sha1.update('how to use sha1 in '.encode('utf-8'))
                    </span>
                </li>
                <li>
                    hash<a href="">.hexdigest()</a>
                    <span>
                        md5.hexdigest() <br>
                        sha1.hexdigest()
                    </span>
                </li>
            </ul>
        </div>
    </div>
</div>