<div class="u-col">
    <div class="u-block">
        <h3>Ajax<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] 请求</h4>
            <ul>
                <li>
                    <a href="">$.ajax</a>({option})
                    <span>
                        执行异步 AJAX 请求 <br>
                        <a href="http://www.runoob.com/jquery/ajax-ajax.html">参考资料</a>
                        <table>
                            <tbody>
                            <tr>
                                <th align="left" width="27%">名称</th>
                                <th align="left" width="73%">值/描述</th>  </tr>
                            <tr>
                            <td>async</td>
                                <td>布尔值，表示请求是否异步处理。默认是 true。</td>
                                </tr>
                            <tr>
                            <td>beforeSend(<em>xhr</em>)</td>
                                <td>发送请求前运行的函数。</td>
                                </tr>
                            <tr>
                            <td>cache</td>
                                <td>布尔值，表示浏览器是否缓存被请求页面。默认是 true。</td>
                                </tr>
                            <tr>
                            <td>complete(<em>xhr,status</em>)</td>
                                <td>请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。<br>
                            </td>
                                </tr>
                            <tr>
                            <td>contentType</td>
                                <td>发送数据到服务器时所使用的内容类型。默认是："application/x-www-form-urlencoded"。</td>
                                </tr>
                            <tr>
                            <td>context</td>
                                <td>为所有 AJAX 相关的回调函数规定 "this" 值。</td>
                                </tr>
                            <tr>
                            <td>data</td>
                                <td>规定要发送到服务器的数据。</td>
                                </tr>
                            <tr>
                            <td>dataFilter(<em>data</em>,<em>type</em>)</td>
                                <td>用于处理 XMLHttpRequest 原始响应数据的函数。</td>
                                </tr>
                            <tr>
                            <td>dataType</td>
                                <td>预期的服务器响应的数据类型。</td>
                                </tr>
                            <tr>
                            <td>error(<em>xhr,status,error</em>)</td>
                                <td>如果请求失败要运行的函数。</td>
                                </tr>
                            <tr>
                            <td>global</td>
                                <td>布尔值，规定是否为请求触发全局 AJAX 事件处理程序。默认是 true。<br>
                            </td>
                                </tr>
                            <tr>
                            <td>ifModified</td>
                                <td>布尔值，规定是否仅在最后一次请求以来响应发生改变时才请求成功。默认是 false。</td>
                                </tr>
                            <tr>
                            <td>jsonp</td>
                                <td>在一个 jsonp 中重写回调函数的字符串。</td>
                                </tr>
                            <tr>
                            <td>jsonpCallback</td>
                                <td>在一个 jsonp 中规定回调函数的名称。</td>
                                </tr>
                            <tr>
                            <td>password</td>
                                <td>规定在 HTTP 访问认证请求中使用的密码。</td>
                                </tr>
                            <tr>
                            <td>processData</td>
                                <td>布尔值，规定通过请求发送的数据是否转换为查询字符串。默认是 true。</td>
                                </tr>
                            <tr>
                            <td>scriptCharset</td>
                                <td>规定请求的字符集。</td>
                                </tr>
                            <tr>
                            <td>success(<em>result,status,xhr</em>)</td>
                                <td>当请求成功时运行的函数。</td>
                                </tr>
                            <tr>
                            <td>timeout</td>
                                <td>设置本地的请求超时时间（以毫秒计）。</td>
                                </tr>
                            <tr>
                            <td>traditional</td>
                                <td>布尔值，规定是否使用参数序列化的传统样式。</td>
                                </tr>
                            <tr>
                            <td>type</td>
                                <td>规定请求的类型（GET 或 POST）。</td>
                                </tr>
                            <tr>
                            <td>url</td>
                                <td>规定发送请求的 URL。默认是当前页面。<br>
                            </td>
                                </tr>
                            <tr>
                            <td>username</td>
                                <td>规定在 HTTP 访问认证请求中使用的用户名。</td>
                                </tr>
                            <tr>
                            <td>xhr</td>
                                <td>用于创建 XMLHttpRequest 对象的函数。</td>
                                </tr>
                            </tbody>
                        </table>
                    </span>
                </li>
                <li>
                    $(ele).<a href="">load</a><em>(url,[data,fn(response,status,xhr)])</em>
                    <span>
                        从服务器加载数据，并把返回的数据放置到指定的元素中 <br>
                        <a href="http://www.runoob.com/jquery/ajax-load.html">参考资料</a>
                    </span>
                </li>
                <li>
                    <a href="">$.getJSON</a><em>(url,[data,success(data,status,xhr)])</em>
                    <span>
                        使用 HTTP GET 请求从服务器加载 JSON 编码的数据 <br>
                        <a href="http://www.runoob.com/jquery/ajax-getjson.html">参考资料</a>
                    </span>
                </li>
                <li>
                    <a href="">$.getScript</a><em>(url,[success(response,status)])</em>
                    <span>
                        使用 AJAX 的 HTTP GET 请求从服务器加载并执行 JavaScript <br>
                        <a href="http://www.runoob.com/jquery/ajax-getscript.html">参考资料</a>
                    </span>
                </li>
                <li>
                    <a href="">$.get</a><em>(url,[data,function(data,status,xhr),dataType])</em>
                    <span>
                        使用 AJAX 的 HTTP GET 请求从服务器加载数据 <br>
                        <a href="http://www.runoob.com/jquery/ajax-get.html">参考资料</a>
                    </span>
                </li>
                <li>
                    <a href="">$.post</a><em>(url,[data,function(data,status,xhr),dataType])</em>
                    <span>
                        使用 AJAX 的 HTTP POST 请求从服务器加载数据 <br>
                        <a href="http://www.runoob.com/jquery/ajax-post.html">参考资料</a>
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 事件</h4>
            <ul>
                <li>
                    $(ele).<a href="">ajaxStart</a>(fn)
                    <span>
                        规定第一个 AJAX 请求开始时运行的函数
                    </span>
                </li>
                <li>
                    $(ele).<a href="">ajaxSend</a>(fn)
                    <span>
                        规定 AJAX 请求发送之前运行的函数
                    </span>
                </li>
                <li>
                    $(ele).<a href="">ajaxSuccess</a>(fn)
                    <span>
                        规定 AJAX 请求成功完成时运行的函数
                    </span>
                </li>
                <li>
                    $(ele).<a href="">ajaxStop</a>(fn)
                    <span>
                        规定所有的 AJAX 请求完成时运行的函数
                    </span>
                </li>
                <li>
                    $(ele).<a href="">ajaxComplete</a>(fn)
                    <span>
                        规定 AJAX 请求完成时运行的函数，即使请求并未成功
                    </span>
                </li>
                <li>
                    $(ele).<a href="">ajaxError</a>(fn)
                    <span>
                        规定 AJAX 请求失败时运行的函数
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 序列化</h4>
            <ul>
                <li>
                    <a href="">$.param</a>(obj)
                    <span>
                        创建数组或对象的序列化表示形式（可用于 AJAX 请求的 URL 查询字符串）<br>
                        <a href="http://www.runoob.com/jquery/ajax-param.html">参考资料</a>
                    </span>
                </li>
                <li>
                    $(ele).<a href="">serialize()</a>
                    <span>
                        编码表单元素集为字符串以便提交 <br>
                        <a href="http://www.runoob.com/jquery/ajax-serialize.html">参考资料</a>
                    </span>
                </li>
                <li>
                    $(ele).<a href="">serializeArray()</a>
                    <span>
                        编码表单元素集为 name 和 value 的数组
                    </span>
                </li>
            </ul>
        </div>
    </div>
    <div class="u-block">
        <h3>解析<span>-</span></h3>
        <div class="u-list">
            <ul>
                <li>
                    <a href="">$.parseJSON</a>(json)
                    <span>
                        将符合标准格式的JSON字符串转为与之对应的JavaScript对象 <br>
                        <a href="http://www.runoob.com/jquery/misc-parsejson.html">参考资料</a>
                    </span>
                </li>
                <li>
                    <a href="">$.parseHTML</a>(str)
                    <span>
                        将HTML字符串解析为对应的DOM节点数组<br>
                        <a href="http://www.runoob.com/jquery/misc-parsehtml.html">参考资料</a>
                    </span>
                </li>
                <li>
                    <a href="">$.parseXML</a>(str)
                    <span>
                        将字符串解析为对应的XML文档
                    </span>
                </li>
            </ul>
        </div>
    </div>
</div>