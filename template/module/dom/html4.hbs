<div class="u-col">
    <div class="u-block">
        <h3>CSS操作<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] 类名</h4>
            <ul>
                <li>
                    ele.<a href="">className</a>
                    <span>
                        设置或返回元素的class属性，每个class之间用空格分割。
                    </span>
                </li>
                <li class="i-dot-blue">
                    ele.<a href="">classList</a>
                    <span>
                        返回该元素的类的一个对象。 IE10以下不支持。 <br>
                        <table>
                            <tr>
                                <th>方法</th>
                                <th>描述</th>
                            </tr>
                            <tr>
                                <td>.value</td>
                                <td>完整类名</td>
                            </tr>
                            <tr>
                                <td>.add(class1,class2,...)</td>
                                <td>添加新的类名，如果已经存在则不会添加</td>
                            </tr>
                            <tr>
                                <td>.remove(class1,class2,...)</td>
                                <td>移除指定类名，如果移除不存在的类名，不会报错</td>
                            </tr>
                            <tr>
                                <td>.toggle(class,true/false)</td>
                                <td>切换指定类名。 <br>
                                    第一个参数为切换的类名。 <br>
                                    如果存在时，移除并返回false；如果不存在，添加并返回true。 <br>
                                    第二个参数，为强制设置布尔值。
                                </td>
                            </tr>
                            <tr>
                                <td>.contains(class)</td>
                                <td>返回布尔值，判断指定类名是否存在</td>
                            </tr>
                            <tr>
                                <td>.length</td>
                                <td>类名个数</td>
                            </tr>
                            <tr>
                                <td>.item(i) / [i]</td>
                                <td>返回索引上的类名</td>
                            </tr>
                        </table>
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 样式</h4>
            <ul>
                <li>
                    ele.<a href="">style</a>[.prop]
                    <span>
                        设置或返回元素的样式属性 <br>
                        返回的是一个对象，通过style.classname来设置具体，只取行内。 <br>
                        其中cssText属性，可以读写或删除整个样式
                    </span>
                </li>
                <li>
                    window.<a href="">getComputedStyle(dom,[':before'])</a><em>[.prop]</em>
                    <span>
                        返回一个包含该节点最终样式信息的对象。 <br>
                        所谓“最终样式信息”，指的是各种CSS规则叠加后的结果。 <hr>
                        getComputedStyle方法还可以接受第二个参数，表示指定节点的伪元素（比如:before、:after、:first-line、:first-letter等）。
                    </span>
                </li>
                <li>
                    style.<a href="">getPropertyValue</a><em>(prop)</em>
                    <span>
                        读取某个CSS属性
                    </span>
                </li>
                <li>
                    style.<a href="">setProperty</a><em>(prop,val)</em>
                    <span>
                        设置某个CSS属性
                    </span>
                </li>
                <li>
                    style.<a href="">removeProperty</a><em>(prop)</em>
                    <span>
                        删除某个CSS属性
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 样式表</h4>
            <ul>
                <li>
                    doc.<a href="">styleSheets</a>
                    <span>
                        返回网页的所有样式表的类数组对象 <br>
                        它包括link节点加载的样式表和style节点内嵌的样式表。
                        <table>
                            <tr>
                                <th>属性</th>
                                <th>描述</th>
                                <th>示例</th>
                            </tr>
                            <tr>
                                <td>media</td>
                                <td>media属性表示这个样式表是用于屏幕（screen），还是用于打印（print），或两者都适用（all）。该属性只读，默认值是screen。</td>
                                <td>document.styleSheets[0].media.mediaText //all</td>
                            </tr>
                            <tr>
                                <td>disabled</td>
                                <td>一旦样式表设置了disabled属性，这张样式表就将失效。注意，disabled属性只能在JavaScript脚本中设置，不能在HTML语句中设置。</td>
                                <td>document.querySelector('#linkElement').disabled = 'disabled';</td>
                            </tr>
                            <tr>
                                <td>href</td>
                                <td>href属性是只读属性，返回StyleSheet对象连接的样式表地址。对于内嵌的style节点，该属性等于null。</td>
                                <td>document.styleSheets[0].href</td>
                            </tr>
                            <tr>
                                <td>type</td>
                                <td>type属性返回StyleSheet对象的type值，通常是text/css </td>
                                <td>document.styleSheets[0].type  // "text/css"</td>
                            </tr>
                            <tr>
                                <td>title</td>
                                <td>title属性返回StyleSheet对象的title值。</td>
                                <td>-</td>
                            </tr>
                            <tr>
                                <td>parentStyleSheet</td>
                                <td>CSS的@import命令允许在样式表中加载其他样式表。parentStyleSheet属性返回包含了当前样式表的那张样式表。如果当前样式表是顶层样式表，则该属性返回null。</td>
                                <td>-</td>
                            </tr>
                            <tr>
                                <td>ownerNode</td>
                                <td>ownerNode属性返回StyleSheet对象所在的DOM节点，通常是link或style。对于那些由其他样式表引用的样式表，该属性为null。</td>
                                <td>document.styleSheets[0].ownerNode // [object HTMLLinkElement]</td>
                            </tr>
                            <tr>
                                <td>cssRules</td>
                                <td>cssRules属性指向一个类似数组的对象，里面每一个成员就是当前样式表的一条CSS规则。</td>
                                <td>sheet.cssRules[0].cssText <br>
                                styleSheet.cssRules[0].style.color = 'red';
                                </td>
                            </tr>
                        </table>
                    </span>
                </li>
                <li>
                    sheet.<a href="">insertRule</a>('str',n)
                    <span>
                        在当前样式表的cssRules对象插入CSS规则
                    </span>
                </li>
                <li>
                    sheet.<a href="">deleteRule</a>(n)
                    <span>
                        删除cssRules对象的CSS规则
                    </span>
                </li>
                <li>
                    cssRule.<a href="">*</a>
                    <span>
                        <table>
                            <tr>
                                <th>属性</th>
                                <th>描述</th>
                            </tr>
                            <tr>
                                <td>cssText</td>
                                <td>返回当前规则的文本</td>
                            </tr>
                            <tr>
                                <td>parentStyleSheet</td>
                                <td>返回定义当前规则的样式表对象</td>
                            </tr>
                            <tr>
                                <td>parentRule</td>
                                <td>返回包含当前规则的那条CSS规则。</td>
                            </tr>
                            <tr>
                                <td>type</td>
                                <td>返回有一个整数值，表示当前规则的类型 <br>
                                    1：样式规则，部署了CSSStyleRule接口<br>
                                    3：输入规则，部署了CSSImportRule接口<br>
                                    4：Media规则，部署了CSSMediaRule接口<br>
                                    5：字体规则，部署了CSSFontFaceRule接口
                                </td>
                            </tr>
                            <tr>
                                <td>selectorText</td>
                                <td>返回当前规则的选择器  //.class</td>
                            </tr>
                            <tr>
                                <td>style.prop</td>
                                <td>style属性返回一个对象</td>
                            </tr>
                        </table>
                        <a href="http://javascript.ruanyifeng.com/dom/css.html">CSSStyleDeclaration对象</a>
                    </span>
                </li>
            </ul>
        </div>
    </div>
    <div class="u-block">
        <h3>盒模型<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] 尺寸</h4>
            <ul>
                <li>
                    ele.<a href="">clientWidth</a>
                    <span>
                        返回内容的可视宽度（不包括边框，边距或滚动条） <br>
                        即元素宽度 - 边框 - 边距 - 17px(滚动条)
                    </span>
                </li>
                <li>
                    ele.<a href="">clientHeight</a>
                    <span>
                        返回元素的可视高度，包括填充，不包括边框+滚动条+边距 <br>
                        即元素高度 - 边框 - 边距 - 17px(滚动条)
                    </span>
                </li>
                <li>
                    ele.<a href="">scrollWidth</a>
                    <span>
                        返回元素的宽度，包括填充，不包括边框+滚动条+边距，但包括带滚动条的隐蔽地方 <br>
                        即当有子元素的溢出宽度时，等于子元素的宽度，否则等于可视宽度
                    </span>
                </li>
                <li>
                    ele.<a href="">scrollHeight</a>
                    <span>
                        返回元素的高度，包括填充，不包括边框+滚动条+边距，但包括带滚动条的隐蔽地方 <br>
                        即当有子元素的溢出高度时，等于子元素的高度，否则等于可视高度
                    </span>
                </li>
                <li>
                    ele.<a href="">offsetWidth</a>
                    <span>
                        返回元素的宽度，包括填充，也包括边框+滚动条，不包括边距 <br>
                        即元素盒模型宽度
                    </span>
                </li>
                <li>
                    ele.<a href="">offsetHeight</a>
                    <span>
                        返回元素的高度，包括填充，也包括边框+滚动条，不包括边距 <br>
                        即元素盒模型高度
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 偏移</h4>
            <ul>
                <li>
                    ele.<a href="">offsetLeft</a>
                    <span>
                        返回当前元素的相对水平偏移
                    </span>
                </li>
                <li>
                    ele.<a href="">offsetTop</a>
                    <span>
                        返回当前元素的相对垂直偏移
                    </span>
                </li>
                <li>
                    ele.<a href="">offsetParent</a>
                    <span>
                        返回当前元素的偏移容器
                    </span>
                </li>
                <li>
                    ele.<a href="">getBoundingClientRect()</a>.left/top
                    <span>
                        某个元素距离视口左上角的坐标
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 滚动</h4>
            <ul>
                <li>
                    ele.<a href="">scrollLeft</a>
                    <span>
                        当元素有overflow时生效，设置或返回距左边缘起始点的滚动位置点
                    </span>
                </li>
                <li>
                    ele.<a href="">scrollTop</a>
                    <span>
                        当元素有overflow时生效，设置或返回距顶部边缘起始点的滚动位置点
                    </span>
                </li>
                <li>
                    window.<a href="">scrollTo</a>(x,y)
                    <span>
                        把内容滚动到指定的坐标
                    </span>
                </li>
                <li>
                    window.<a href="">scrollBy</a>(x,y)
                    <span>
                        按照指定的像素值来滚动内容
                    </span>
                </li>
                <li class="i-dot-orange">
                    window.<a href="">pageXOffset</a>
                    <span>
                        设置或返回当前页面相对于窗口显示区左上角的 X 位置 <br>
                        IE8及以下不支持，用document.documentElement.scrollLeft来替代
                    </span>
                </li>
                <li class="i-dot-orange">
                    window.<a href="">pageYOffset</a>
                    <span>
                        设置或返回当前页面相对于窗口显示区左上角的 Y 位置<br>
                        IE8及以下不支持，用document.documentElement.scrollTop来替代
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] window</h4>
            <ul>
                <li class="i-dot-orange">
                    window.<a href="">innerWidth</a>
                    <span>
                        返回窗口的文档显示区的宽度（包括滚动条）<br>
                        var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
                    </span>
                </li>
                <li class="i-dot-orange">
                    window.<a href="">innerHeight</a>
                    <span>
                        返回窗口的文档显示区的高度（包括滚动条） <br>
                        var h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] screen</h4>
            <ul>
                <li>
                    screen.<a href="">width</a>
                    <span>
                        返回屏幕的总宽度
                    </span>
                </li>
                <li>
                    screen.<a href="">height</a>
                    <span>
                        返回屏幕的总高度
                    </span>
                </li>
                <li>
                    screen.<a href="">availWidth</a>
                    <span>
                        返回屏幕的宽度（不包括Windows任务栏）
                    </span>
                </li>
                <li>
                    screen.<a href="">availHeight</a>
                    <span>
                        返回屏幕的高度（不包括Windows任务栏）
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 移动</h4>
            <ul>
                <li>
                    window.<a href="">moveTo</a>(x,y)
                    <span>
                        用于移动浏览器窗口到指定位置。它接受两个参数，分别是窗口左上角距离屏幕左上角的水平距离和垂直距离，单位为像素。
                    </span>
                </li>
                <li>
                    window.<a href="">moveBy</a>(x,y)
                    <span>
                        将窗口移动到一个相对位置。它接受两个参数，分别是窗口左上角向右移动的水平距离和向下移动的垂直距离，单位为像素。
                    </span>
                </li>
            </ul>
        </div>
    </div>
</div>