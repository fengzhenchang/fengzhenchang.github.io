<div class="u-col">
    <div class="u-block">
        <h3>数值<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>+</span>]  值</h4>
            <ul style="display: none;">
                <li>
                    <a href="">常规数</a>
                    <span>
                        在 JavaScript 里面，数字均为双精度浮点类型double-precision 64-bit binary format IEEE 754 （也就是说一个数字的范围只能在+-2的53次方）<hr>
                        十进制数：01、1 <br>
                        二进制数：0b01、0B10 （只能为0和1）<br>
                        八进制数：0o777 （小于8）<br>
                        十六进制数：0x10、0XAB （0~9A~F）<br>
                        指数形式：1E2、1e2、0.1e2
                    </span>
                </li>
                <li>
                    <a href="">特殊值</a>
                    <span>
                        <table>
                            <thead>
                                <tr>
                                    <th scope="col">属性</th>
                                    <th scope="col">描述</th>
                                </tr>
                            </thead>
                            <tbody>
                            <tr>
                                <td>Number.MAX_VALUE</td>
                                <td>可表示的最大值 1.79e+308</td>
                            </tr>
                            <tr>
                                <td>Number.MIN_VALUE</td>
                                <td>可表示的最小值 5e-324</td>
                            </tr>
                            <tr>
                                <td>Number.NEGATIVE_INFINITY</td>
                                <td>特指“负无穷”;在溢出时返回</td>
                            </tr>
                            <tr>
                                <td>Number.POSITIVE_INFINITY</td>
                                <td>特指“正无穷”;在溢出时返回</td>
                            </tr>
                            <tr>
                                <td>Number.EPSILON</td>
                                <td>表示1和比最接近1且大于1的最小Number之间的差别</td>
                            </tr>
                            <tr>
                                <td>Number.MIN_SAFE_INTEGER</td>
                                <td>JavaScript最小安全整数.</td>
                            </tr>
                            <tr>
                                <td>Number.MAX_SAFE_INTEGER</td>
                                <td>JavaScript最大安全整数.</td>
                            </tr>
                            </tbody>
                            </table>
                            0/0=NaN，正数/0=正无穷，负数/0=负无穷 <br>
                            正无穷+正无穷=正无穷，负无穷+负无穷=负无穷，正无穷+负无穷=NaN<br>
                            无穷乘法操作得到无穷，无穷除法与求余操作得到NaN
                    </span>
                </li>
                <li>
                    <a href="">NaN</a>
                    <span>
                        特指非数值 <br>
                        任何与 NaN 进行运算的结果均为 NaN <br>
                        NaN 与自身不相等(NaN 不与任何值相等) 
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 检测</h4>
            <ul>
                <li>
                    [Number.]<a href="">isNaN</a>(val)
                    <span>
                        判断传递的值是否为 NaN <br>
                        全局isNaN会自动转换参数为数值再做判断，Number.isNaN不会自动转换
                    </span>
                </li>
                <li>
                    [Number.]<a href="">isFinite</a>(val)
                    <span>
                        判断传递的值是否为有限数字 <br>
                        全局的isFinite会自动转换参数为数值再作判断，Number.isFinite不会自动转换
                    </span>
                </li>
                <li>
                    <a href="">Number.isInteger</a>(val)
                    <span>
                        判断传递的值是否为整数 <br>
                        IE不支持，需使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger">polyfill</a>
                    </span>
                </li>
                <li>
                    <a href="">Number.isSafeInteger</a>(val)
                    <span>
                        判断传递的值是否为安全整数 <br>
                        IE不支持，需使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger">polyfill</a>
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 转换</h4>
            <ul>
                <li>
                    (num).<a href="">toString</a>([rad])
                    <span>
                        指定进制，转为字符串，默认为10进制，范围[2~36]。
                    </span>
                </li>
                <li>
                    [Number.]<a href="">parseInt</a>(val,[rad])
                    <span>
                        根据给定的进制数把一个字符串解析成整数<br>
                        自动判断进制，默认转换进制为10进制 <br>
                        <table>
                            <tr>
                                <th>value</th>
                                <th>结果</th>
                            </tr>
                            <tr>
                                <td>空字符串</td>
                                <td>NaN</td>
                            </tr>
                            <tr>
                                <td>第一个非空字符不是数值或负号</td>
                                <td>NaN</td>
                            </tr>
                            <tr>
                                <td>第一个非空字符是数值，遇到非数值时停止解析</td>
                                <td>number</td>
                            </tr>
                        </table>
                    </span>
                </li>
                <li>
                    [Number.]<a href="">parseFloat</a>(val)
                    <span>
                        把字符串参数解析成浮点数 <br>
                        第一个小数点有效，第二个无效
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 表示</h4>
            <ul>
                <li>
                    (num).<a href="">toFixed</a>([n])
                    <span>
                        指定小数点后位数，小数位数[0 ~ 20]<br>
                        会四舍五入，返回的是一个字符串
                    </span>
                </li>
                <li>
                    (num).<a href="">toExponential</a>([n])
                    <span>
                        使用指数计数法，范围[0~20]，返回的是一个字符串。
                    </span>
                </li>
                <li>
                    (num).<a href="">toPrecision</a>([n])
                    <span>
                        以指定的精度返回该数值对象的字符串表示 <br>
                        把数字格式化为指定的长度。N为显示位数，自动选择toFixed() toExponential(N)两者之一。
                    </span>
                </li>
                <li>
                    (num).<a href="">toLocaleString</a><em>([local],[opt])</em>
                    <span>
                        返回这个数字在特定语言环境下的表示字符串 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString">参考资料</a> <br>
                        仅浏览器中有效 <br>
                        $num.toLocaleString('zh-u-nu-hanidec')  //中文数字 <br>
                        x.toLocaleString('cn-ZH',{ <br>
                            style:'currency',<br>
                            currency:'CNY',<br>
                            currencyDisplay:'symbol'<br>
                        }) <br>
                        en-US、en-JP <br>
                        USD、JPY...
                    </span>
                </li>
            </ul>
        </div>
    </div>
    <div class="u-block">
        <h3>数学<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] Math</h4>
			<ul>
                <li>
                    <a href="">Math.abs</a>(x)
                    <span>返回 x 的绝对值</span>
                </li>
                <li>
					<a href="">Math.sign</a>(x)
					<span>
						判断一个数到底是正数、负数、还是零。 <hr>
						参数为正数，返回+1； <br>
						参数为负数，返回-1；<br>
						参数为 0，返回0；<br>
						参数为-0，返回-0;<br>
						其他值，返回NaN。
					</span>
				</li>
				<li>
                    <a href="">Math.random()</a>
                    <span>
                        返回 0 ~ 1 之间的随机数(大于等于 0.0且小于1.0的伪随机 double 值) <br>
                        1.随机颜色16进制：Math.floor( Math.random() * 16777215 ).toString( 16 ) <br>
                        2.2个值之间的随机值：function random(min,max){return min + (max-min)*Math.random();} <br>
                        <a href="http://javascript.ruanyifeng.com/stdlib/math.html">参考资料</a>
				    </span>
                </li>
				<li>
                    <a href="">Math.max/min</a>(x,y,z..n)
                    <span>
                        返回 x,y,z,...,n 中的最高/低值 <br>
                        参数中最大的值。如果没有参数，则返回 -Infinity。如果有某个参数为 NaN，或是不能转换成数字的非数字值，则返回 NaN。
				    </span>
                </li>
				<li>
                    <a href="">Math.ceil/floor/round/trunc</a>(x)
                    <span>
                        对数进行上/下舍入/四舍五入/返回整数部分
                    </span>
                </li>
                <li>
                    <a href="">Math.根</a>
                    <span>
                        <table>
                            <tr>
                                <th>函数</th>
                                <th>描述</th>
                            </tr>
                            <tr>
                                <td>Math.SQRT1_2</td>
                                <td>返回 2 的平方根的倒数（约等于 0.707）</td>
                            </tr>
                            <tr>
                                <td>Math.SQRT2</td>
                                <td>返回 2 的平方根（约等于 1.414）</td>
                            </tr>
                            <tr>
                                <td>Math.sqrt(x)</td>
                                <td>返回一个数的平方根</td>
                            </tr>
                            <tr>
                                <td>Math.cbrt</td>
                                <td>返回一个数的立方根</td>
                            </tr>
                            <tr>
                                <td>Math.hypot(x,y..)</td>
                                <td>返回所有参数的平方和的平方根</td>
                            </tr>
                        </table>
                    </span>
                </li>
                <li>
                    <a href="">Math.指数对数</a>
                    <span>
                        <table>
                            <tr>
                                <th>函数</th>
                                <th>描述</th>
                            </tr>
                            <tr>
                                <td>Math.E</td>
                                <td>返回算术常量 e，即自然对数的底数（约等于2.718）</td>
                            </tr>
                            <tr>
                                <td>Math.LN2</td>
                                <td>返回 2 的自然对数（约等于0.693）</td>
                            </tr>
                            <tr>
                                <td>Math.LN10</td>
                                <td>返回 10 的自然对数（约等于2.302）</td>
                            </tr>
                            <tr>
                                <td>Math.LOG2E</td>
                                <td>返回以 2 为底的 e 的对数（约等于 1.414）</td>
                            </tr>
                            <tr>
                                <td>Math.LOG10E</td>
                                <td>返回以 10 为底的 e 的对数（约等于0.434）</td>
                            </tr>
                            <tr>
                                <td>Math.pow(x,y)</td>
                                <td>返回x的y次幂</td>
                            </tr>
                            <tr>
                                <td>Math.exp(x)</td>
                                <td>返回E(x)的指数</td>
                            </tr>
                            <tr>
                                <td>Math.log(x)</td>
                                <td>返回数的自然对数（底为e）</td>
                            </tr>
                            <tr>
                                <td>Math.log2(x)</td>
                                <td>返回一个数字以2为底的对数</td>
                            </tr>
                            <tr>
                                <td>Math.log10(x)</td>
                                <td>返回以10为底的对数</td>
                            </tr>
                            <tr>
                                <td>Math.expm1(x)</td>
                                <td>返回e(x)-1</td>
                            </tr>
                            <tr>
                                <td>Math.log1p(x)</td>
                                <td>返回一个数字加1后的自然对数，即log(x+1)</td>
                            </tr>
                        </table>
                    </span>
                </li>
				<li>
                    <a href="">Math.三角函数</a>
                    <span>
                        <table>
                            <tr>
                                <th>函数</th>
                                <th>描述</th>
                            </tr>
                            <tr>
                                <td>Math.PI</td>
                                <td>返回圆周率（约等于3.14159）</td>
                            </tr>
                            <tr>
                                <td>Math.sin(π)</td>
                                <td>返回数的正弦</td>
                            </tr>
                            <tr>
                                <td>Math.cos(π)</td>
                                <td>返回数的余弦</td>
                            </tr>
                            <tr>
                                <td>Math.tan(π)</td>
                                <td>返回角的正切</td>
                            </tr>
                            <tr>
                                <td>Math.asin(x)</td>
                                <td>返回数的反正弦值</td>
                            </tr>
                            <tr>
                                <td>Math.acos(x)</td>
                                <td>返回数的反余弦值</td>
                            </tr>
                            <tr>
                                <td>Math.atan(x)</td>
                                <td>以介于 -PI/2 与 PI/2 弧度之间的数值来返回 x 的反正切值</td>
                            </tr>
                            <tr>
                                <td>Math.atan2(y,x)</td>
                                <td>返回从 x 轴到点 (x,y) 的角度（介于 -PI/2 与 PI/2 弧度之间）</td>
                            </tr>
                            <tr>
                                <td>Math.sinh(x)</td>
                                <td>返回数的双曲正弦值</td>
                            </tr>
                            <tr>
                                <td>Math.cosh(x)</td>
                                <td>返回数的双曲余弦值</td>
                            </tr>
                            <tr>
                                <td>Math.tanh(x)</td>
                                <td>返回数的双曲正切值</td>
                            </tr>
                            <tr>
                                <td>Math.asinh(x)</td>
                                <td>返回数的反双曲正弦值</td>
                            </tr>
                            <tr>
                                <td>Math.acosh(x)</td>
                                <td>返回数的反双曲余弦值</td>
                            </tr>
                            <tr>
                                <td>Math.atanh(x)</td>
                                <td>返回数的反双曲正切值</td>
                            </tr>
                        </table>
				    </span>
                </li>
                <li>
                    <a href="">Math.clz32/</a>(x)
                    <span>
                        返回一个数的 32 位无符号整数形式有多少个前导 0
                    </span>
                </li>
                <li>
                    <a href="">Math.imul</a>(x,y)
                    <span>
                        返回两个数以 32 位带符号整数形式相乘的结果 <br>
                    </span>
                </li>
                <li>
                    <a href="">Math.fround</a>(x)
                    <span>
                        方法返回一个数的32位单精度浮点数形式
                    </span>
                </li>
			</ul>
        </div>
    </div>
    <div class="u-block">
        <h3>日期<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] Date</h4>
			<ul>
				<li><a href="">new Date</a>([time..])<span>
					返回：日期对象 <hr>
					无参数时：创建计算机当前时间的日期对象 <br>
					var date = new Date(); <br>
					Sat Oct 07 2017 01:20:24 GMT+0800 (中国标准时间) <hr>
					有参数时：创建指定时间的日期对象 <br>
					var date = new Date(2015, 5, 19, 20, 15, 30, 123); <br>
					var date = new Date(1435146562875); <br>
					当前时间是浏览器从本机操作系统获取的时间，所以不一定准确，因为用户可以把当前时间设定为任何值。
				</span></li>
                <li>date.<a href="">getTime()</a>{timestamp}<span>时间戳，等同于date.valueOf()</span></li>
				<li>date.<a href="">getFullYear()</a>{2017}<span>年份</span></li>
				<li>date.<a href="">getMonth()</a>{0~11}<span>月份，范围0~11</span></li>
				<li>date.<a href="">getDate()</a>{1~31}<span>日期</span></li>
				<li>date.<a href="">getDay()</a>{1~7}<span>星期</span></li>
				<li>date.<a href="">getHours()</a>{0~24}<span>时，24小时制</span></li>
				<li>date.<a href="">getMinutes()</a>{0~60}<span>分</span></li>
				<li>date.<a href="">getSeconds()</a>{0~60}<span>秒</span></li>
				<li>date.<a href="">getMilliseconds()</a>{0~1000}<span>毫秒</span></li>
				<li>
                    data.<a href="">set...</a>
                    <span>
                        设置日期对象
                    </span>
                </li>
				<li>date.<a href="">toString</a>()<span>
					Sat Oct 07 2017 01:36:58 GMT+0800 (中国标准时间)
				</span></li>
				<li>date.<a href="">toLocaleString</a>()<span>
					2017/10/7 上午1:33:06
				</span></li>
				<li>date.<a href="">toUTCString</a>()<span>
					Fri, 06 Oct 2017 17:33:06 GMT
				</span></li>
                <li><a href="">Date.parse(ISO)</a>{timestamp}<span>
					解析一个符合ISO 8601格式的字符串，并返回对应时间戳 <br>
					var d = Date.parse('2015-06-24T19:49:22.875+08:00'); <br>
					d; // 1435146562875
				</span></li>
                <li>
                    <a href="">Date.now()</a>{timestamp}
                    <span>当前时间戳，IE8不支持</span>
                </li>
			</ul>
        </div>
    </div>
</div>