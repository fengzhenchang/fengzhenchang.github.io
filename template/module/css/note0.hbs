<div class="u-col">
    <div class="u-block">
        <h3>选择器<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] 优先级</h4>
            <ul>
                <li><a href="http://labs.qianduan.net/css-selector/">selector</a><span>选择器支持一览.值得注意的是.class.class IE6并不识别</span></li>
                <li>
                    <a href="">选择器优先级</a>
                    <span>1.三种引入方式的优先级
                    <br />2.同引入方式内的基本原则：
                    <br />一般而言，选择器越特殊，它的优先级越高。也就是选择器指向的越准确，它的优先级就越高。
                    <br />复杂的计算方法：
                    <br />●用1表示派生选择器(用HTML标签申明)的优先级
                    <br />●用10表示类选择器(用一个样式类名申明)的优先级
                    <br />●用100标示ID选择器(用DOM的ID申明)的优先级
                    <br />●div.test1 .span var 优先级 1+10 +10 +1
                    <br />●span#xxx .songs li 优先级1+100 + 10 + 1
                    <br />●#xxx li 优先级 100 +1
                    <br />3.Tips:样式在html中的先后顺序不决定样式优先级,由CSS中定义的先后和优先级有关 <a href="http://www.imooc.com/wenda/detail/218832">参考资料</a>
                    <br />4.Tips:<a href="http://www.zhangxinxu.com/wordpress/?p=2286">选择器拾遗漏</a>
                    </span>
                </li>
                <li><a href="">!important</a><span>提升指定样式规则的应用优先权。
                    <br>但在IE6中有BUG,需要分开写在2个选择符中
                    <br>参考资料：<a href="http://css.doyoe.com/rules/!important.htm">GO TO!</a></span>
                </li>
            </ul>
            <h4>[<span>-</span>] HACK</h4>
            <ul>
                <li>
                    <a href="">if IE</a>
                    <span>条件HACK
                    <pre><code data-language="html">
                    &lt;!--[if IE]>
                    指定载入相关JS/CSS或其他文件
                    &lt;![endif]-->
                    </code></pre>
                    <br>参考资料：<a href="http://css.doyoe.com/hack/conditions.htm">GO TO!</a></span>
                </li>
                <li>
                    <a href="">_property</a><span>属性级HACK
                    <table>
                        <tbody>
                        <tr>
                        <td>key: value\9;</td>
                        <td>IE6~10</td>
                        </tr>
                        <tr>
                        <td>key: value\0;</td>
                        <td>Oprea+IE8~10</td>
                        </tr>
                        <tr>
                        <td>.key: value;</td>
                        <td>IE6+7+8</td>
                        </tr>
                        <tr>
                        <td>*key: value;</td>
                        <td>IE6+7 (+或#亦可)</td>
                        </tr>
                        <tr>
                        <td>_key: value;</td>
                        <td>IE6 (-亦可)</td>
                        </tr>
                        <tr>
                        <td>[;property:value;];</td>
                        <td>webkit(Chrome,Safari)</td>
                        </tr>
                        <tr>
                        <td>@-moz-document url-prefix(){..}</td>
                        <td>FireFox</td>
                        </tr>
                        <tr>
                        <td>@media screen and (-webkit-min-device-pixel-ratio:0) {..}</td>
                        <td>webkit(Chrome,Safari)</td>
                        </tr>
                        </tbody>
                    </table>
                    <br>参考资料1：<a href="http://css.doyoe.com/">GO TO!</a>
                    <br>参考资料2：<a href="http://blog.csdn.net/freshlover/article/details/12132801">GO TO!</a>
                    <br />参考资料3：<a href="http://tid.tenpay.com/?p=422">GO TO!</a>
                    </span>
                </li>
                <li>
                    <a href="">*html selector</a><span>选择符级HACK
                    <br> *html selector: IE6及以下
                    <br> *+html selector : IE7
                    <br><a href="http://blog.csdn.net/freshlover/article/details/12132801">结合选择器能力</a>
                    </span>
                </li>
                <li><a href="">expression</a><span>表达式，IE6-7支持，IE8不支持</span></li>
            </ul>
            <h4>[<span>-</span>] 常用选择符</h4>
            <ul>
                <li><a href="">*</a><span>通配符</span></li>
                <li><a href="">tagName</a><span>元素标签名</span></li>
                <li><a href="">#id</a><span>#id选择器,也可以ele#id</span></li>
                <li><a href="">.class</a><span>类选择器,可以连缀.class1.class2</span></li>
                <li><a href="">E F</a><span>后代选择器</span></li>
                <li><a href="">E>F</a><span>子选择器</span></li>
                <li><a href="">E+F</a><span>相邻选择器</span></li>
                <li><a href="">E~F</a><span>兄弟选择器</span></li>
            </ul>
            <h4>[<span>-</span>] 伪类选择符</h4>
            <ul>
                <li>
                    <a href="">:link/:visited/:hover/:active</a><span>
                    a:hover 必须位于 a:link 和 a:visited 之后，a:active 必须位于 a:hover 之后（LVHA）
                    <br>a:link{}
                    <br>a:visited{}
                    <br>a:hover{}
                    <br>a:active{}
                    <br>目前hover可用于任何元素,例如li:hover{},也可以用为li:hover a{}
                    <br>IE6中:hover只对a元素有效,可通过JS控制
                    </span>
                </li>
                <li><a href="">:not</a>(selector)<span>匹配不含有s选择符的元素E</span></li>
                <li>
                    <a href="">:first-child</a>
                    <span>:first-child 第一个子元素,前缀为被选元素,必须是第一个子元素而非第一个本类子元素
                    <br>:first-of-type 该选择符总是能命中父元素的第1个为E的子元素，不论第1个子元素是否为E
                    </span>
                </li>
                <li>
                    <a href="">:last-child</a>
                    <span>:last-child 最后一个子元素
                    <br>:last-of-type 最后一个此类元素</span></li>
                    <li><a href="">:nth-child(n)</a>
                    <span>:nth-child(n) 第N个子元素
                    <br />:nth-child(2n) 偶数,:nth-child(2n+1) 奇数
                    <br />第N个子元素，如果有不同类别的其他同级标签元素亦会增长序列数
                    <br>:nth-of-type(n) 第N个此类子元素
                    </span>
                </li>
                <li>
                    <a href="">:only-child</a>
                    <span>:only-child 唯一一个子元素
                    <br>:only-of-type 为父元素中唯一元素的此类元素
                    </span></li>
                    <li><a href="">:focus</a><span>设置对象在成为输入焦点（该对象的onfocus事件发生）时的样式。<br>webkit内核浏览器会默认给:focus状态的元素加上outline的样式,设置:focus{outline:0}<br></span></li>
                    <li><a href="">:empty</a><span>匹配没有任何子元素（包括text节点）的元素E。</span></li>
                    <li><a href="">:target</a><span>匹配相关URL指向的HASH目标元素。</span>
                </li>
            </ul>
            <h4>[<span>-</span>] 属性选择符</h4>
            <ul>
                <li><a href="">[att]</a><span>含有属性</span></li>
                <li><a href="">[att='val']</a><span>属性值为指定</span></li>
                <li><a href="">[att~='val']</a><span>选择具有att属性且属性值为一用空格分隔的字词列表，其中一个等于val的E元素（包含只有一个值且该值等于val的情况）。完整包含,而非字符串。</span></li>
                <li><a href="">[att^='val']</a><span>属性值以..开头</span></li>
                <li><a href="">[att$='val']</a><span>属性值以..结尾</span></li>
                <li><a href="">[att*='val']</a><span>属性值包含..字符串</span></li>
                <li><a href="">[att|='val']</a><span>属性值以val开头并用连接符"-"分隔的字符串的元素</span></li>
            </ul>
            <h4>[<span>-</span>] 其他选择符</h4>
            <ul>
                <li><a href="">:lang(zh-cn)</a><span>匹配使用特殊语言的E元素。</span></li>
                <li><a href="">:root</a><span>匹配E元素在文档的根元素。在HTML中，根元素永远是HTML</span></li>
                <li><a href="">:checked</a><span>匹配用户界面上处于选中状态的元素E。(用于input type为radio与checkbox时)，不包含下拉菜单</span></li>
                <li><a href="">:enabled</a><span>匹配用户界面上处于可用状态的元素E。</span></li>
                <li><a href="">:disabled</a><span>匹配用户界面上处于禁用状态的元素E。</span></li>
            </ul>
        </div>
    </div>
</div>